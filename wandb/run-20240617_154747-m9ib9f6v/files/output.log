Starting Sweep: Batch Size: 64, Learning Rate: 0.0001
Making datasets and defining subsets
Training: 60000 -> 600
Testing: 10000 -> 100
Making Dataloaders
Defining network
2024-06-17 15:47:48.877027
Scaler Value: 1000
Training - 2024-06-17 15:47:48.877523
[1/1, 1/10] Training Loss: 0.7565 - Iteration Time: 0:00:01.937886
[1/1, 2/10] Training Loss: 0.6771 - Iteration Time: 0:00:01.399956
[1/1, 3/10] Training Loss: 0.5460 - Iteration Time: 0:00:01.443179
[1/1, 4/10] Training Loss: 0.5310 - Iteration Time: 0:00:01.446014
[1/1, 5/10] Training Loss: 0.5105 - Iteration Time: 0:00:01.416622
[1/1, 6/10] Training Loss: 0.5035 - Iteration Time: 0:00:01.426205
[1/1, 7/10] Training Loss: 0.5009 - Iteration Time: 0:00:01.429631
[1/1, 8/10] Training Loss: 0.5049 - Iteration Time: 0:00:01.471682
[1/1, 9/10] Training Loss: 0.4999 - Iteration Time: 0:00:01.754675
[1/1, 10/10] Training Loss: 0.5033 - Iteration Time: 0:00:01.536535
Testing - 2024-06-17 15:48:04.258275
[1/1, 1/2]
[1/1, 2/2]
Testing Loss: 0.4925 - Epoch Time: 0:00:17.060219
Training and Testing Finished - Time: 0:00:17.060715
torch.Size([200, 64, 1, 28, 28])
torch.Size([200, 64, 1, 28, 28])
Assembling test data for t-sne projection
Code Layer Shape: torch.Size([200, 64, 100])
Code Layer Shape: torch.Size([64, 100])
-- 1/2 --
Code Layer Shape: torch.Size([200, 36, 100])
Code Layer Shape: torch.Size([36, 100])
-- 2/2 --
   Labels      0    1    2      3      4  ...   94   95   96    97     98   99
0       6  0.115  0.0  0.0  0.110  0.065  ...  0.0  0.0  0.0  0.09  0.145  0.0
1       5  0.115  0.0  0.0  0.115  0.070  ...  0.0  0.0  0.0  0.09  0.145  0.0
2       7  0.115  0.0  0.0  0.105  0.065  ...  0.0  0.0  0.0  0.08  0.150  0.0
3       3  0.115  0.0  0.0  0.110  0.070  ...  0.0  0.0  0.0  0.09  0.150  0.0
4       7  0.115  0.0  0.0  0.110  0.065  ...  0.0  0.0  0.0  0.09  0.145  0.0
[5 rows x 101 columns]
Plotting Results Grid
Plotting Spiking Input MNIST
Plotting Spiking Input MNIST Animation - 1
Plotting Spiking Output MNIST
Plotting Spiking Output MNIST Animation - 1
Applying UMAP
    Labels      0    1    2      3      4  ...   93   94   95   96     97     98
0        6  0.115  0.0  0.0  0.110  0.065  ...  0.0  0.0  0.0  0.0  0.090  0.145
1        5  0.115  0.0  0.0  0.115  0.070  ...  0.0  0.0  0.0  0.0  0.090  0.145
2        7  0.115  0.0  0.0  0.105  0.065  ...  0.0  0.0  0.0  0.0  0.080  0.150
3        3  0.115  0.0  0.0  0.110  0.070  ...  0.0  0.0  0.0  0.0  0.090  0.150
4        7  0.115  0.0  0.0  0.110  0.065  ...  0.0  0.0  0.0  0.0  0.090  0.145
..     ...    ...  ...  ...    ...    ...  ...  ...  ...  ...  ...    ...    ...
95       1  0.115  0.0  0.0  0.110  0.065  ...  0.0  0.0  0.0  0.0  0.085  0.150
96       3  0.115  0.0  0.0  0.110  0.065  ...  0.0  0.0  0.0  0.0  0.090  0.145
97       3  0.115  0.0  0.0  0.115  0.070  ...  0.0  0.0  0.0  0.0  0.090  0.140
98       7  0.115  0.0  0.0  0.110  0.070  ...  0.0  0.0  0.0  0.0  0.090  0.140
99       0  0.115  0.0  0.0  0.110  0.065  ...  0.0  0.0  0.0  0.0  0.095  0.145
[100 rows x 100 columns]
0      0
1      1
2      2
3      3
4      4
      ..
95    95
96    96
97    97
98    98
99    99
Name: Unnamed: 0, Length: 100, dtype: int64
Applying PCA