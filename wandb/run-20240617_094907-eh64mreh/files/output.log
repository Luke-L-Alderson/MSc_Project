Starting Sweep: Batch Size: 64, Learning Rate: 0.0001
Making datasets and defining subsets
Training: 60000 -> 600
Testing: 10000 -> 100
Making Dataloaders
Defining network
2024-06-17 09:49:09.069297
Scaler Value: 0.013513513513513514
Training - 2024-06-17 09:49:09.070289
[1/1, 1/10] Training Loss: 4.9783 - Iteration Time: 0:00:02.027645
[1/1, 2/10] Training Loss: 5.0550 - Iteration Time: 0:00:01.436251
[1/1, 3/10] Training Loss: 5.1670 - Iteration Time: 0:00:01.591624
[1/1, 4/10] Training Loss: 5.2275 - Iteration Time: 0:00:01.442823
[1/1, 5/10] Training Loss: 4.9978 - Iteration Time: 0:00:01.415414
[1/1, 6/10] Training Loss: 5.0767 - Iteration Time: 0:00:01.434855
[1/1, 7/10] Training Loss: 5.0640 - Iteration Time: 0:00:01.482932
[1/1, 8/10] Training Loss: 4.9935 - Iteration Time: 0:00:01.417874
[1/1, 9/10] Training Loss: 4.8189 - Iteration Time: 0:00:01.444253
[1/1, 10/10] Training Loss: 5.0480 - Iteration Time: 0:00:01.613928
Testing - 2024-06-17 09:49:24.553024
[1/1, 1/2]
[1/1, 2/2]
Testing Loss: 5.0405 - Epoch Time: 0:00:17.189407
Training and Testing Finished - Time: 0:00:17.190895
Assembling test data for t-sne projection
Code Layer Shape: torch.Size([64, 100])
-- 1/2 --
Code Layer Shape: torch.Size([36, 100])
-- 2/2 --
Plotting Results Grid
Plotting Spiking Input MNIST
Plotting Spiking Input MNIST Animation - 1
Plotting Spiking Output MNIST
Plotting Spiking Output MNIST Animation - 1
Applying t-SNE
Applying UMAP
Applying PCA