Starting Sweep: Batch Size: 64, Learning Rate: 0.0001
Making datasets and defining subsets
Training: 60000 -> 600
Testing: 10000 -> 100
Making Dataloaders
Defining network
2024-06-14 14:20:06.305262
Scaler Value: 0.013513513513513514
Training - 2024-06-14 14:20:06.305758
[1/1, 1/10] Training Loss: 0.0673 - Iteration Time: 0:00:01.814989
[1/1, 2/10] Training Loss: 0.0683 - Iteration Time: 0:00:01.290454
[1/1, 3/10] Training Loss: 0.0698 - Iteration Time: 0:00:01.279567
[1/1, 4/10] Training Loss: 0.0706 - Iteration Time: 0:00:01.265614
[1/1, 5/10] Training Loss: 0.0676 - Iteration Time: 0:00:01.336162
[1/1, 6/10] Training Loss: 0.0687 - Iteration Time: 0:00:01.261152
[1/1, 7/10] Training Loss: 0.0685 - Iteration Time: 0:00:01.272596
[1/1, 8/10] Training Loss: 0.0676 - Iteration Time: 0:00:01.314323
[1/1, 9/10] Training Loss: 0.0653 - Iteration Time: 0:00:01.290933
[1/1, 10/10] Training Loss: 0.0684 - Iteration Time: 0:00:01.356135
Testing - 2024-06-14 14:20:29.587748
[1/1, 1/2]
[1/1, 2/2]
Testing Loss: 0.0683 - Epoch Time: 0:00:33.858788
Training and Testing Finished - Time: 0:00:33.859284
Assembling test data for t-sne projection
{'rate_on': 75. * hertz, 'rate_off': 1. * hertz, 'total_time': 200. * msecond, 'bin_size': 1. * msecond}
Code Layer Shape: torch.Size([64, 100])
-- 1/2 --
{'rate_on': 75. * hertz, 'rate_off': 1. * hertz, 'total_time': 200. * msecond, 'bin_size': 1. * msecond}
Code Layer Shape: torch.Size([36, 100])
-- 2/2 --
Plotting Results Grid
Plotting Spiking Input MNIST
Plotting Spiking Input MNIST Animation - 3
Plotting Spiking Output MNIST
Plotting Spiking Output MNIST Animation - 3
Applying t-SNE