Starting Sweep: Batch Size: 64, Learning Rate: 0.0001
Making datasets and defining subsets
Training: 60000 -> 600
Testing: 10000 -> 100
Making Dataloaders
Defining network
2024-06-17 09:50:46.563524
Scaler Value: 0.013513513513513514
Training - 2024-06-17 09:50:46.564516
[1/1, 1/10] Training Loss: 4.9783 - Iteration Time: 0:00:01.908475
[1/1, 2/10] Training Loss: 5.0550 - Iteration Time: 0:00:01.622783
[1/1, 3/10] Training Loss: 5.1666 - Iteration Time: 0:00:01.462572
[1/1, 4/10] Training Loss: 5.2241 - Iteration Time: 0:00:01.410942
[1/1, 5/10] Training Loss: 4.9969 - Iteration Time: 0:00:01.437276
[1/1, 6/10] Training Loss: 5.0792 - Iteration Time: 0:00:01.411932
[1/1, 7/10] Training Loss: 5.0654 - Iteration Time: 0:00:01.476490
[1/1, 8/10] Training Loss: 4.9927 - Iteration Time: 0:00:01.494825
[1/1, 9/10] Training Loss: 4.8207 - Iteration Time: 0:00:01.457060
[1/1, 10/10] Training Loss: 5.0481 - Iteration Time: 0:00:01.601476
Testing - 2024-06-17 09:51:02.020960
[1/1, 1/2]
[1/1, 2/2]
Testing Loss: 5.0437 - Epoch Time: 0:00:17.384399
Training and Testing Finished - Time: 0:00:17.385887
Assembling test data for t-sne projection
Code Layer Shape: torch.Size([64, 100])
-- 1/2 --
Code Layer Shape: torch.Size([36, 100])
-- 2/2 --
Plotting Results Grid
Plotting Spiking Input MNIST
Plotting Spiking Input MNIST Animation - 1
Plotting Spiking Output MNIST
Plotting Spiking Output MNIST Animation - 1
Applying t-SNE
Applying UMAP
Applying PCA